}
}
return(a)
}
a<-get_distances(seq1a)
print("Differences in amino acid sequences Question#1")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
print("Distance matrix Question#1")
distance_matrix
seq1a<-read.dna("sequences_1a.txt", format = "fasta", as.character = TRUE, as.matrix = TRUE)
comparing<-function(string1, string2){
counter=0
for (i in 1:length(sequences[[1]])){
if (string1[i]!=string2[i]){
counter=counter+1
}
}
return(counter)
}
get_distances<-function(matrix_of_interest){
l<-length(row.names(matrix_of_interest))
a<-matrix(data=NA,nrow=length(row.names(matrix_of_interest)),
ncol=length(row.names(matrix_of_interest)),
dimnames = list(row.names(matrix_of_interest),
row.names(matrix_of_interest)))
for (i in 1:l){
for (j in 1:l){
value<-comparing(matrix_of_interest[i,],matrix_of_interest[j,])
a[i,j]<-value
a[j,i]<-value
}
}
return(a)
}
a<-get_distances(seq1a)
print("Differences in amino acid sequences Question#1")
print("\n")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
print("Distance matrix Question#1")
print("\n")
distance_matrix
seq1a<-read.dna("sequences_1a.txt", format = "fasta", as.character = TRUE, as.matrix = TRUE)
comparing<-function(string1, string2){
counter=0
for (i in 1:length(sequences[[1]])){
if (string1[i]!=string2[i]){
counter=counter+1
}
}
return(counter)
}
get_distances<-function(matrix_of_interest){
l<-length(row.names(matrix_of_interest))
a<-matrix(data=NA,nrow=length(row.names(matrix_of_interest)),
ncol=length(row.names(matrix_of_interest)),
dimnames = list(row.names(matrix_of_interest),
row.names(matrix_of_interest)))
for (i in 1:l){
for (j in 1:l){
value<-comparing(matrix_of_interest[i,],matrix_of_interest[j,])
a[i,j]<-value
a[j,i]<-value
}
}
return(a)
}
a<-get_distances(seq1a)
cat("Differences in amino acid sequences Question#1")
cat("\n")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
cat("Distance matrix Question#1")
cat("\n")
distance_matrix
seq1a<-read.dna("sequences_1a.txt", format = "fasta", as.character = TRUE, as.matrix = TRUE)
comparing<-function(string1, string2){
counter=0
for (i in 1:length(sequences[[1]])){
if (string1[i]!=string2[i]){
counter=counter+1
}
}
return(counter)
}
get_distances<-function(matrix_of_interest){
l<-length(row.names(matrix_of_interest))
a<-matrix(data=NA,nrow=length(row.names(matrix_of_interest)),
ncol=length(row.names(matrix_of_interest)),
dimnames = list(row.names(matrix_of_interest),
row.names(matrix_of_interest)))
for (i in 1:l){
for (j in 1:l){
value<-comparing(matrix_of_interest[i,],matrix_of_interest[j,])
a[i,j]<-value
a[j,i]<-value
}
}
return(a)
}
a<-get_distances(seq1a)
cat("Differences in amino acid sequences Question#1")
cat("\n")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
cat("------------------------------------------")
cat("Distance matrix Question#1")
cat("\n")
distance_matrix
seq1a<-read.dna("sequences_1a.txt", format = "fasta", as.character = TRUE, as.matrix = TRUE)
comparing<-function(string1, string2){
counter=0
for (i in 1:length(sequences[[1]])){
if (string1[i]!=string2[i]){
counter=counter+1
}
}
return(counter)
}
get_distances<-function(matrix_of_interest){
l<-length(row.names(matrix_of_interest))
a<-matrix(data=NA,nrow=length(row.names(matrix_of_interest)),
ncol=length(row.names(matrix_of_interest)),
dimnames = list(row.names(matrix_of_interest),
row.names(matrix_of_interest)))
for (i in 1:l){
for (j in 1:l){
value<-comparing(matrix_of_interest[i,],matrix_of_interest[j,])
a[i,j]<-value
a[j,i]<-value
}
}
return(a)
}
a<-get_distances(seq1a)
cat("Differences in amino acid sequences Question#1")
cat("\n")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
cat("------------------------------------------\n")
cat("Distance matrix Question#1")
cat("\n")
distance_matrix
knitr::include_graphics("assignment4_question1_image.jpg")
knitr::include_graphics("assignment4_question2_image.jpg")
length(distance_matrix[1,])
average_dist_matrix<-function(dist_mat){
average_dist<-c()
for (i in 1:length(dist_mat[1,])){
average_dist[i]<-sum(dist_mat[i,])/((length(dist_mat[1,]))-2)
}
#average_dist
dist_mat_alter<-cbind(dist_mat,average_dist)
return(dist_mat_alter)
}
dist_mat_alter<-average_dist_matrix(distance_matrix)
dist_mat_alter
u_matrix<-function(dist_mat){
new_dim_names<-unlist(list(row.names(dist_mat)))
#new_dim_names<-unlist(list(row.names(dist_mat_alter)))
dimension<-length(dist_mat[,1])
#dimension<-length(dist_mat_alter[,1])
which_next<-matrix(NA,nrow=dimension,ncol = dimension,
dimnames = list(new_dim_names,new_dim_names))
which_next
for (i in 1:length(which_next[1,])){
for (j in 1:length(which_next[1,])){
if (i==j){
which_next[i,j]<-0
}
else{
value<-dist_mat[i,j]-
dist_mat[i,length(dist_mat[1,])]-
dist_mat[j,length(dist_mat[1,])]
which_next[i,j]<-value
}
}
}
return(which_next)
}
u_matrix(dist_mat_alter)
#length(distance_matrix[1,])
average_dist_matrix<-function(dist_mat){
average_dist<-c()
for (i in 1:length(dist_mat[1,])){
average_dist[i]<-sum(dist_mat[i,])/((length(dist_mat[1,]))-2)
}
#average_dist
dist_mat_alter<-cbind(dist_mat,average_dist)
return(dist_mat_alter)
}
dist_mat_alter<-average_dist_matrix(distance_matrix)
dist_mat_alter #The new distance matrix with the row averages added
u_matrix<-function(dist_mat){
new_dim_names<-unlist(list(row.names(dist_mat)))
#new_dim_names<-unlist(list(row.names(dist_mat_alter)))
dimension<-length(dist_mat[,1])
#dimension<-length(dist_mat_alter[,1])
which_next<-matrix(NA,nrow=dimension,ncol = dimension,
dimnames = list(new_dim_names,new_dim_names))
which_next
for (i in 1:length(which_next[1,])){
for (j in 1:length(which_next[1,])){
if (i==j){
which_next[i,j]<-0
}
else{
value<-dist_mat[i,j]-
dist_mat[i,length(dist_mat[1,])]-
dist_mat[j,length(dist_mat[1,])]
which_next[i,j]<-value
}
}
}
return(which_next)
}
u_matrix(dist_mat_alter) #This return the matrix to tell you which branch to cluster next
new_dim_names<-list("Dog","Pig/Cat","Mouse","Human")
nj_matrix_1<-matrix(data = c(0,0.735,0.147,0.329,0.0735,0,0.1365,0.3295,0.147,0.1365,0,0.383,0.329,0.3295,0.383,0),
nrow = 4, ncol = 4, dimnames = list(new_dim_names,new_dim_names))
nj_matrix_1
aver_nj_mat_1<-average_dist_matrix(nj_matrix_1)
aver_nj_mat_1
u_matrix(aver_nj_mat_1)
temp_1<-aver_nj_mat_1[1,2]
temp_1
temp_2<-aver_nj_mat_1[1,length(aver_nj_mat_1[1,])]
temp_2
temp_3<-aver_nj_mat_1[2,length(aver_nj_mat_1[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
branch_length_nj(aver_nj_mat_1,2,1)
branch_length_nj(aver_nj_mat_1,1,2)
0.0328+0.0340+0.0745
new_dim_names<-list("Dog","Pig/Cat","Mouse","Human")
nj_matrix_1<-matrix(data = c(0,0.735,0.147,0.329,0.0735,0,0.1365,0.3295,0.147,0.1365,0,0.383,0.329,0.3295,0.383,0),
nrow = 4, ncol = 4, dimnames = list(new_dim_names,new_dim_names))
cat("NJ distance matrix with 4 taxa\n")
nj_matrix_1 #NJ distance matrix with 4 taxa
aver_nj_mat_1<-average_dist_matrix(nj_matrix_1)
cat("Altered distance 4 taxa matrix with row averages\n")
aver_nj_mat_1 #Altered distance 4 taxa matrix with row averages
cat("U matrix of 4 taxa distance matrix\n")
u_matrix(aver_nj_mat_1) # U matrix of 4 taxa distance matrix
temp_1<-aver_nj_mat_1[1,2]
temp_1
temp_2<-aver_nj_mat_1[1,length(aver_nj_mat_1[1,])]
temp_2
temp_3<-aver_nj_mat_1[2,length(aver_nj_mat_1[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
branch_length_nj(aver_nj_mat_1,2,1)
branch_length_nj(aver_nj_mat_1,1,2)
0.0328+0.0340+0.0745
knitr::opts_chunk$set(echo = TRUE)
library(ape)
library(phangorn)
setwd("D:/Documents/BoxSync/Classes/EEOB563_lab/labs/assignment_4")
sequences<-read.FASTA("sequences_1a.txt", type="DNA")
dist.dna(sequences,model="JC69")
seq1a<-read.dna("sequences_1a.txt", format = "fasta", as.character = TRUE, as.matrix = TRUE)
comparing<-function(string1, string2){
counter=0
for (i in 1:length(sequences[[1]])){
if (string1[i]!=string2[i]){
counter=counter+1
}
}
return(counter)
}
get_distances<-function(matrix_of_interest){
l<-length(row.names(matrix_of_interest))
a<-matrix(data=NA,nrow=length(row.names(matrix_of_interest)),
ncol=length(row.names(matrix_of_interest)),
dimnames = list(row.names(matrix_of_interest),
row.names(matrix_of_interest)))
for (i in 1:l){
for (j in 1:l){
value<-comparing(matrix_of_interest[i,],matrix_of_interest[j,])
a[i,j]<-value
a[j,i]<-value
}
}
return(a)
}
a<-get_distances(seq1a)
cat("Differences in amino acid sequences Question#1")
cat("\n")
a
a_prob<-a/(length(seq1a[1,]))
#a_prob<-formatC(a_prob, digits = 5, format = "f")
distance_matrix<-(-3/4)*log(1-((4/3)*(a_prob)))
cat("------------------------------------------\n")
cat("Distance matrix Question#1")
cat("\n")
distance_matrix
#knitr::include_graphics("assignment4_question1_image.jpg")
tree_upgma<-upgma(D=distance_matrix)
plot(tree_upgma, type="phylogram", use.edge.length = TRUE, show.tip.label = TRUE, show.node.label = TRUE)
edgelabels(formatC(tree_upgma$edge.length, digits = 4, format = "f"), bg="black", col="white", font=0.2)
#tree_upgma$edge.length
knitr::include_graphics("assignment4_question2_image.jpg")
#length(distance_matrix[1,])
average_dist_matrix<-function(dist_mat){
average_dist<-c()
for (i in 1:length(dist_mat[1,])){
average_dist[i]<-sum(dist_mat[i,])/((length(dist_mat[1,]))-2)
}
#average_dist
dist_mat_alter<-cbind(dist_mat,average_dist)
return(dist_mat_alter)
}
dist_mat_alter<-average_dist_matrix(distance_matrix)
dist_mat_alter #The new distance matrix with the row averages added
u_matrix<-function(dist_mat){
new_dim_names<-unlist(list(row.names(dist_mat)))
#new_dim_names<-unlist(list(row.names(dist_mat_alter)))
dimension<-length(dist_mat[,1])
#dimension<-length(dist_mat_alter[,1])
which_next<-matrix(NA,nrow=dimension,ncol = dimension,
dimnames = list(new_dim_names,new_dim_names))
which_next
for (i in 1:length(which_next[1,])){
for (j in 1:length(which_next[1,])){
if (i==j){
which_next[i,j]<-0
}
else{
value<-dist_mat[i,j]-
dist_mat[i,length(dist_mat[1,])]-
dist_mat[j,length(dist_mat[1,])]
which_next[i,j]<-value
}
}
}
return(which_next)
}
u_matrix(dist_mat_alter) #This return the matrix to tell you which branch to cluster next
neighbor_joining_tree<-NJ(distance_matrix)
plot(neighbor_joining_tree,type="phylogram")
edgelabels(formatC(neighbor_joining_tree$edge.length, digits = 4, format = "f"), bg="black", col="white", font=1)
new_dim_names<-list("Dog","Pig/Cat","Mouse","Human")
nj_matrix_1<-matrix(data = c(0,0.735,0.147,0.329,0.0735,0,0.1365,0.3295,0.147,0.1365,0,0.383,0.329,0.3295,0.383,0),
nrow = 4, ncol = 4, dimnames = list(new_dim_names,new_dim_names))
cat("NJ distance matrix with 4 taxa\n")
nj_matrix_1 #NJ distance matrix with 4 taxa
aver_nj_mat_1<-average_dist_matrix(nj_matrix_1)
cat("Altered distance 4 taxa matrix with row averages\n")
aver_nj_mat_1 #Altered distance 4 taxa matrix with row averages
cat("U matrix of 4 taxa distance matrix\n")
u_matrix(aver_nj_mat_1) # U matrix of 4 taxa distance matrix
temp_1<-aver_nj_mat_1[1,2]
temp_1
temp_2<-aver_nj_mat_1[1,length(aver_nj_mat_1[1,])]
temp_2
temp_3<-aver_nj_mat_1[2,length(aver_nj_mat_1[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
branch_length_nj(aver_nj_mat_1,2,1)
branch_length_nj(aver_nj_mat_1,1,2)
0.0328+0.0340+0.0745
new_dim_names<-list("Dog/Pig/Cat","Mouse","Human")
nj_matrix_2<-matrix(data = c(0,0.105,0.2925,0.105,0,0.383,0.2925,0.383,0),
nrow = 3, ncol = 3, dimnames = list(new_dim_names,new_dim_names))
nj_matrix_2
aver_nj_mat_2<-average_dist_matrix(nj_matrix_2)
aver_nj_mat_2
u_matrix(aver_nj_mat_2)
temp_1<-aver_nj_mat_2[1,2]
temp_1
temp_2<-aver_nj_mat_2[1,length(aver_nj_mat_2[1,])]
temp_2
temp_3<-aver_nj_mat_2[2,length(aver_nj_mat_2[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
#length(distance_matrix[1,])
average_dist_matrix<-function(dist_mat){
average_dist<-c()
for (i in 1:length(dist_mat[1,])){
average_dist[i]<-sum(dist_mat[i,])/((length(dist_mat[1,]))-2)
}
#average_dist
dist_mat_alter<-cbind(dist_mat,average_dist)
return(dist_mat_alter)
}
dist_mat_alter<-average_dist_matrix(distance_matrix)
cat("------------------------------------------\n")
dist_mat_alter #The new distance matrix with the row averages added
cat("------------------------------------------\n")
u_matrix<-function(dist_mat){
new_dim_names<-unlist(list(row.names(dist_mat)))
#new_dim_names<-unlist(list(row.names(dist_mat_alter)))
dimension<-length(dist_mat[,1])
#dimension<-length(dist_mat_alter[,1])
which_next<-matrix(NA,nrow=dimension,ncol = dimension,
dimnames = list(new_dim_names,new_dim_names))
which_next
for (i in 1:length(which_next[1,])){
for (j in 1:length(which_next[1,])){
if (i==j){
which_next[i,j]<-0
}
else{
value<-dist_mat[i,j]-
dist_mat[i,length(dist_mat[1,])]-
dist_mat[j,length(dist_mat[1,])]
which_next[i,j]<-value
}
}
}
return(which_next)
}
u_matrix(dist_mat_alter) #This return the matrix to tell you which branch to cluster next
new_dim_names<-list("Dog","Pig/Cat","Mouse","Human")
nj_matrix_1<-matrix(data = c(0,0.735,0.147,0.329,0.0735,0,0.1365,0.3295,0.147,0.1365,0,0.383,0.329,0.3295,0.383,0),
nrow = 4, ncol = 4, dimnames = list(new_dim_names,new_dim_names))
cat("NJ distance matrix with 4 taxa\n")
nj_matrix_1 #NJ distance matrix with 4 taxa
aver_nj_mat_1<-average_dist_matrix(nj_matrix_1)
cat("Altered distance 4 taxa matrix with row averages\n")
aver_nj_mat_1 #Altered distance 4 taxa matrix with row averages
cat("U matrix of 4 taxa distance matrix\n")
u_matrix(aver_nj_mat_1) # U matrix of 4 taxa distance matrix
temp_1<-aver_nj_mat_1[1,2]
temp_1
temp_2<-aver_nj_mat_1[1,length(aver_nj_mat_1[1,])]
temp_2
temp_3<-aver_nj_mat_1[2,length(aver_nj_mat_1[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
branch_length_nj(aver_nj_mat_1,2,1)
branch_length_nj(aver_nj_mat_1,1,2)
0.0328+0.0340+0.0745
new_dim_names<-list("Dog","Pig/Cat","Mouse","Human")
nj_matrix_1<-matrix(data = c(0,0.735,0.147,0.329,0.0735,0,0.1365,0.3295,0.147,0.1365,0,0.383,0.329,0.3295,0.383,0),
nrow = 4, ncol = 4, dimnames = list(new_dim_names,new_dim_names))
cat("NJ distance matrix with 4 taxa\n")
nj_matrix_1 #NJ distance matrix with 4 taxa
aver_nj_mat_1<-average_dist_matrix(nj_matrix_1)
cat("------------------------------------------\n")
cat("Altered distance 4 taxa matrix with row averages\n")
aver_nj_mat_1 #Altered distance 4 taxa matrix with row averages
cat("------------------------------------------\n")
cat("U matrix of 4 taxa distance matrix\n")
u_matrix(aver_nj_mat_1) # U matrix of 4 taxa distance matrix
temp_1<-aver_nj_mat_1[1,2]
temp_1
temp_2<-aver_nj_mat_1[1,length(aver_nj_mat_1[1,])]
temp_2
temp_3<-aver_nj_mat_1[2,length(aver_nj_mat_1[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
branch_length_nj(aver_nj_mat_1,2,1)
branch_length_nj(aver_nj_mat_1,1,2)
0.0328+0.0340+0.0745
new_dim_names<-list("Dog/Pig/Cat","Mouse","Human")
nj_matrix_2<-matrix(data = c(0,0.105,0.2925,0.105,0,0.383,0.2925,0.383,0),
nrow = 3, ncol = 3, dimnames = list(new_dim_names,new_dim_names))
cat("NJ distance matrix with 3 taxa groups\n")
nj_matrix_2 #NJ distance matrix with 3 taxa groups
cat("------------------------------------------\n")
aver_nj_mat_2<-average_dist_matrix(nj_matrix_2)
cat("NJ distance matrix with 3 taxa groups and row averages\n")
aver_nj_mat_2 #NJ distance matrix with 3 taxa groups and row averages
cat("------------------------------------------\n")
u_matrix(aver_nj_mat_2)
temp_1<-aver_nj_mat_2[1,2]
temp_1
temp_2<-aver_nj_mat_2[1,length(aver_nj_mat_2[1,])]
temp_2
temp_3<-aver_nj_mat_2[2,length(aver_nj_mat_2[1,])]
temp_3
((1/2)*temp_1)+((1/2)*(temp_2-temp_3))
branch_length_nj<-function(mat,i,j){
value<-((1/2)*(mat[i,j]))+((1/2)*(aver_nj_mat_1[i,length(aver_nj_mat_1[1,])]-aver_nj_mat_1[j,length(aver_nj_mat_1[1,])]))
return(value)
}
